services:
  app:
    build: .
    volumes:
      - static-data:/vol/static
      - media-data:/vol/media
    environment:
      - DEBUG=${DEBUG}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - DEFAULT_FROM_USER=${DEFAULT_FROM_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_HOST=psql
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - psql

  psql:
    image: postgres:bullseye
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}

  web:
    build: ./web
    command: >
      sh -c "nginx -g 'daemon off;'"
    depends_on:
      - app
      - certbot
    ports:
      - 80:8000
      - 443:443
    volumes:
      - static-data:/vol/static
      - media-data:/vol/media
      - certificates:/etc/letsencrypt/:ro
      # validation files served as per nginx conf file
      - certbot-validation:/var/www/certbot/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      # folder with ssl_certificates passed to web
      - certificates:/etc/letsencrypt/:rw
      # creates validation (challenge) files and passes to web
      - certbot-validation:/var/www/certbot/:rw



volumes:
  postgres-data:
  static-data:
  media-data:
  certificates:
  certbot-validation:
